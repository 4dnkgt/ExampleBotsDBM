[
  null,
  {
    "name": "InitOnce",
    "temp": "",
    "event-type": "1",
    "_id": "ltvaO",
    "actions": [
      {
        "storage": "3",
        "varName": "init",
        "comparison": "1",
        "value": "true",
        "iftrue": "1",
        "iftrueVal": "",
        "iffalse": "0",
        "iffalseVal": "",
        "name": "Check Variable"
      },
      {
        "storage": "3",
        "varName": "init",
        "changeType": "0",
        "value": "true",
        "name": "Control Variable"
      },
      {
        "info": "0",
        "find": "462697055316606977",
        "storage": "3",
        "varName": "support-server",
        "name": "Find Server"
      },
      {
        "server": "3",
        "varName": "support-server",
        "name": "Change Server"
      },
      {
        "info": "0",
        "find": "462697497782124554",
        "storage": "3",
        "varName": "request-supporter",
        "name": "Find Channel"
      },
      {
        "info": "0",
        "find": "462697836837076992",
        "storage": "3",
        "varName": "error-console",
        "name": "Find Channel"
      },
      {
        "info": "0",
        "find": "463073427415367682",
        "storage": "3",
        "varName": "server-log",
        "name": "Find Channel"
      },
      {
        "time": "2",
        "measurement": "1",
        "name": "Wait"
      },
      {
        "type": "3",
        "storage": "1",
        "varName": "h",
        "name": "Store UTC Time Info"
      },
      {
        "type": "4",
        "storage": "1",
        "varName": "m",
        "name": "Store UTC Time Info"
      },
      {
        "tosend": "Restarted at ${tempVars(\"h\")+2}:${tempVars(\"m\")}",
        "name": "Send Message to Console"
      },
      {
        "behavior": "0",
        "interpretation": "0",
        "code": "client.on('error', (error) => {    \n  if(error.message == 'Unexpected server response: 520'){\n    console.log(\"Cant connect to Discords API, Retrying...\");\n  }else if(error.message == 'read ECONNRESET'){\n    console.log(\"Connection Reset! Reconnecting...\");\n  }else{\n    console.error(error);\n  }            \n});",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      },
      {
        "activity": "1",
        "nameText": "c?help",
        "url": "",
        "name": "Set Bot Activity"
      },
      {
        "channel": "7",
        "varName": "error-console",
        "message": "*Restarted*",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      },
      {
        "behavior": "0",
        "interpretation": "0",
        "code": "const DBL = require(\"dblapi.js\");\nconst dbl = new DBL('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQ2MjkwMzE5OTkwOTU0Mzk0NiIsImJvdCI6dHJ1ZSwiaWF0IjoxNTMwNDc1NDk3fQ.xE6iau7-RAK6pUY0SU2c_2JrgwyTWJ2U54WOupdA6xc', client);\n\ndbl.postStats(client.guilds.size);",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      },
      {
        "name": "End Action Sequence"
      }
    ]
  },
  {
    "name": "InitGlobal",
    "temp": "",
    "event-type": "1",
    "_id": "nAedT",
    "actions": [
      {
        "server": "0",
        "varName": "",
        "info": "0",
        "storage": "1",
        "varName2": "guild",
        "name": "Store Server Info"
      },
      {
        "behavior": "0",
        "interpretation": "0",
        "code": "tempVars(\"guild\").fetchMembers()",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      },
      {
        "storage": "2",
        "varName": "queue",
        "name": "Create List"
      },
      {
        "storage": "2",
        "varName": "nowplaying",
        "changeType": "0",
        "value": "'nou'",
        "name": "Control Variable"
      }
    ]
  },
  {
    "name": "LoadFunctionOverwrites",
    "temp": "",
    "event-type": "0",
    "_id": "LoadSubs",
    "actions": [
      {
        "behavior": "1",
        "interpretation": "0",
        "code": "// Make sure it only runs once!!\n//------------\n\nif(!globalVars(\"loadoverwrites\")){ \n  this.callNextAction(cache);\n  this.storeValue(true, 3,\"loadoverwrites\", cache);\n}",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      },
      {
        "behavior": "1",
        "interpretation": "0",
        "code": "// put your function overwrites here\n\nAudio.playItem2 = function(item, id) {\n\tif(!this.connections[id]) return;\n\tif(this.dispatchers[id]) {\n\t\tthis.dispatchers[id]._forceEnd = true;\n\t\tthis.dispatchers[id].end();\n\t}\n\tconst type = item[0];\n\tlet setupDispatcher = false;\n\tswitch(type) {\n\t\tcase 'file':\n\t\t\tsetupDispatcher = this.playFile(item[2], item[1], id);\n\t\t\tbreak;\n\t\tcase 'url':\n\t\t\tsetupDispatcher = this.playUrl(item[2], item[1], id);\n\t\t\tbreak;\n\t\tcase 'yt':\n\t\t\tsetupDispatcher = this.playYt(item[2], item[1], id);\n\t\t\tbreak;\n\t}\n\tif(setupDispatcher && !this.dispatchers[id]._eventSetup) {\n\t\tthis.dispatchers[id].on('end', function() {\n\t\t\tconst isForced = this.dispatchers[id]._forceEnd;\n\t\t\tthis.dispatchers[id] = null;\n\t\t\t// LASSE EDIT\n\t\t\t// console.log('Trigger');\n\t\t\t\n\t\t\tconst ActionIDToCall = 'cKJvt'\n\n\t\t\tconst events = Files.data.commands.concat(Files.data.events);\n\t\t\tfor(var index in events) { \n\t\t\t\t\n\t\t\t\tif(events[index] && events[index]._id == ActionIDToCall) {\n\t\t\t\t\tconst name = events[index].name;\n\t\t\t\t   \n\t\t\t\t\tlet actions = events[index].actions;\n\t\t\t\t\tconst act = actions[0];\n\t\t\t\t\tif (actions && act && Actions.exists(act.name)) {                \n\t\t\t\t\t\tconst cache2 = {\n\t\t\t\t\t\t\tactions: actions,\n\t\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\t\ttemp: cache.temp,\n\t\t\t\t\t\t\tserver: server,\n\t\t\t\t\t\t\tmsg: null\n\t\t\t\t\t\t};               \n\t\t\t\t\t\tActions[act.name](cache2);                       \n\t\t\t\t\t\tActions.callNextAction(cache); \n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}       \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// LASSE EDIT\n\t\t\tif(!isForced) {\n\t\t\t\tthis.playNext(id);\n\t\t\t}\n\t\t}.bind(this));\n\t\tthis.dispatchers[id]._eventSetup = true;\n\t}\n};\n\nAudio.addToQueue2 = function(item, cache) {\n\tif(!cache.server) return;\n\tconst id = cache.server.id;\n\tif(!this.queue[id]) this.queue[id] = [];\n\tthis.queue[id].push(item);\n\tthis.playNext2(id);\n};\n\nAudio.playNext2 = function(id, forceSkip) {\n\tif(!this.connections[id]) return;\n\tif(!this.dispatchers[id] || !!forceSkip) {\n\t\tif(this.queue[id].length > 0) {\n\t\t\tconst item = this.queue[id].shift();\n\t\t\tthis.playItem2(item, id);\n\t\t} else {\n\t\t\tthis.connections[id].disconnect();\n\t\t}\n\t}\n};\n\n\n////////////////////////\nconsole.log('[Function Overwrites] Loaded!');\nthis.callNextAction(cache);",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      }
    ]
  },
  {
    "name": "LoadCustomScripts",
    "temp": "dbm_error",
    "event-type": "1",
    "_id": "opBsf",
    "actions": [
      {
        "behavior": "0",
        "interpretation": "0",
        "code": "if(!globalVars(\"scripts_loaded\")){ \n    require('./custom.js')({DBM: this.getDBM(),Actions, Files, Events, tempVars, serverVars, globalVars},client)    \n    this.storeValue(true, 3, \"scripts_loaded\", cache)\n}\n\n",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      }
    ],
    "temp2": "js_error"
  },
  {
    "name": "Error",
    "temp": "text",
    "event-type": "37",
    "_id": "qtrxi",
    "actions": [
      {
        "channel": "7",
        "varName": "error-console",
        "message": "**---------ERROR---------**\n${tempVars(\"text\")}\n```${tempVars(\"js\")}```",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      },
      {
        "server": "0",
        "varName": "",
        "info": "0",
        "storage": "1",
        "varName2": "server",
        "name": "Store Server Info"
      },
      {
        "channel": "7",
        "varName": "error-console",
        "message": "${tempVars(\"server\").name} ${tempVars(\"server\").id}",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      }
    ],
    "temp2": "js"
  },
  {
    "name": "TimeRestriction",
    "temp": "member",
    "event-type": "38",
    "_id": "IEMGg",
    "actions": [
      {
        "member": "2",
        "varName": "member",
        "info": "6",
        "storage": "1",
        "varName2": "message",
        "name": "Store Member Info"
      },
      {
        "message": "1",
        "varName": "message",
        "info": "4",
        "storage": "1",
        "varName2": "channel",
        "name": "Store Message Info"
      },
      {
        "channel": "5",
        "varName": "channel",
        "message": "${tempVars(\"member\")} - This command is time restricted. Please wait ${tempVars(\"time\")}.",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      }
    ],
    "temp2": "time"
  },
  {
    "name": "MemberJoin",
    "temp": "member",
    "event-type": "6",
    "_id": "LXZFg",
    "actions": [
      {
        "server": "0",
        "varName": "",
        "dataName": "custom.channelid.join",
        "comparison": "0",
        "value": "",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Server Data"
      },
      {
        "server": "0",
        "varName": "",
        "dataName": "custom.message.join",
        "comparison": "0",
        "value": "",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Server Data"
      },
      {
        "server": "0",
        "varName": "",
        "dataName": "custom.message.join",
        "defaultVal": "0",
        "storage": "1",
        "varName2": "message",
        "name": "Store Server Data"
      },
      {
        "server": "0",
        "varName": "",
        "dataName": "custom.channelid.join",
        "defaultVal": "0",
        "storage": "1",
        "varName2": "channelid",
        "name": "Store Server Data"
      },
      {
        "info": "0",
        "find": "${tempVars(\"channelid\")}",
        "storage": "1",
        "varName": "channel",
        "name": "Find Channel"
      },
      {
        "storage": "1",
        "varName": "channel",
        "comparison": "0",
        "value": "",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Variable"
      },
      {
        "text": "${tempVars(\"message\")}",
        "text2": "%member%",
        "text3": "${tempVars(\"member\")}",
        "info": "1",
        "storage": "1",
        "varName": "message-replaced",
        "name": "Replace Text"
      },
      {
        "title": " ",
        "author": "${tempVars(\"member\").user.username}",
        "color": "#36393E",
        "timestamp": "true",
        "url": "",
        "authorIcon": "${tempVars(\"member\").user.displayAvatarURL}",
        "imageUrl": "",
        "thumbUrl": "",
        "storage": "1",
        "varName": "embed",
        "name": "Create Embed Message"
      },
      {
        "storage": "1",
        "varName": "embed",
        "message": "${tempVars(\"message-replaced\")}",
        "name": "Set Embed Description"
      },
      {
        "storage": "1",
        "varName": "embed",
        "message": "Members: ${tempVars(\"member\").guild.memberCount}",
        "footerIcon": "",
        "name": "Set Embed Footer"
      },
      {
        "storage": "1",
        "varName": "embed",
        "channel": "5",
        "varName2": "channel",
        "name": "Send Embed Message"
      },
      {
        "storage": "1",
        "varName": "error",
        "comparison": "1",
        "value": "true",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Variable"
      },
      {
        "server": "0",
        "varName": "",
        "info": "11",
        "storage": "1",
        "varName2": "owner",
        "name": "Store Server Info"
      },
      {
        "channel": "5",
        "varName": "owner",
        "message": "Hey!\nYou set the welcome message channel to ${tempVars(\"channel\")}!\nProblem: I don't have permission to post messages there :/\nYou need to fix that to allow me to welcome new members :D",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      },
      {
        "channel": "4",
        "varName": "owner",
        "message": "Hey!\nThe channel for welcome message channel has been set to ${tempVars(\"channel\")}!\nProblem: I don't have permission to post messages there :/\nYou need to fix that to allow me to welcome new members :D",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      }
    ]
  },
  {
    "name": "[Disabled] BotJoin",
    "temp": "",
    "event-type": "0",
    "_id": "JbJJa",
    "actions": [
      {
        "info": "1",
        "find": "general",
        "storage": "1",
        "varName": "channel",
        "name": "Find Channel"
      },
      {
        "storage": "1",
        "varName": "channel",
        "comparison": "0",
        "value": "",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Variable"
      },
      {
        "channel": "5",
        "varName": "channel",
        "message": "Hey! Please set me up!\nMy prefix is `c?`\nJust do the following commands if you want to activate the modules:\n`c?set-welcome` Activates custom welcome messages in a specific channel\n`c?set-log` Activates a warning log for messages",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      }
    ]
  },
  {
    "name": "LogBotJoin",
    "temp": "",
    "event-type": "4",
    "_id": "gPXKG",
    "actions": [
      {
        "server": "0",
        "varName": "",
        "info": "0",
        "storage": "1",
        "varName2": "server",
        "name": "Store Server Info"
      },
      {
        "title": "JOINED ${tempVars(\"server\").name}",
        "author": "",
        "color": "#36393E",
        "timestamp": "false",
        "url": "",
        "authorIcon": "",
        "imageUrl": "",
        "thumbUrl": "",
        "storage": "1",
        "varName": "embed",
        "name": "Create Embed Message"
      },
      {
        "storage": "1",
        "varName": "embed",
        "message": "Members: ${tempVars(\"server\").memberCount}\nID: ${tempVars(\"server\").id}\nOwner: ${tempVars(\"server\").owner.user.username} (${tempVars(\"server\").owner.id})",
        "name": "Set Embed Description"
      },
      {
        "storage": "1",
        "varName": "embed",
        "channel": "7",
        "varName2": "server-log",
        "name": "Send Embed Message"
      },
      {
        "behavior": "0",
        "interpretation": "0",
        "code": "const DBL = require(\"dblapi.js\");\nconst dbl = new DBL('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQ2MjkwMzE5OTkwOTU0Mzk0NiIsImJvdCI6dHJ1ZSwiaWF0IjoxNTMwNDc1NDk3fQ.xE6iau7-RAK6pUY0SU2c_2JrgwyTWJ2U54WOupdA6xc', client);\n\ndbl.postStats(client.guilds.size);",
        "storage": "0",
        "varName": "",
        "name": "Run Script"
      },
      {
        "server": "0",
        "varName": "",
        "info": "0",
        "storage": "1",
        "varName2": "guild",
        "name": "Store Server Info"
      },
      {
        "source": "nAedT",
        "type": "true",
        "name": "Call Command/Event"
      }
    ]
  },
  {
    "name": "LogBotLeave",
    "temp": "",
    "event-type": "5",
    "_id": "gPXKG",
    "actions": [
      {
        "server": "0",
        "varName": "",
        "info": "0",
        "storage": "1",
        "varName2": "server",
        "name": "Store Server Info"
      },
      {
        "title": "LEFT ${tempVars(\"server\").name}",
        "author": "",
        "color": "#36393E",
        "timestamp": "false",
        "url": "",
        "authorIcon": "",
        "imageUrl": "",
        "thumbUrl": "",
        "storage": "1",
        "varName": "embed",
        "name": "Create Embed Message"
      },
      {
        "storage": "1",
        "varName": "embed",
        "message": "Members: ${tempVars(\"server\").memberCount}\nID: ${tempVars(\"server\").id}\nOwner: ${tempVars(\"server\").owner.user.username} (${tempVars(\"server\").owner.id})",
        "name": "Set Embed Description"
      },
      {
        "storage": "1",
        "varName": "embed",
        "channel": "7",
        "varName2": "server-log",
        "name": "Send Embed Message"
      }
    ]
  },
  {
    "name": "CheckIfPlaying",
    "temp": "300",
    "event-type": "3",
    "_id": "wotlT",
    "actions": [
      {
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check is Bot in Voice Channel"
      },
      {
        "server": "0",
        "varName": "",
        "storage": "1",
        "varName2": "botmember",
        "name": "Get Bot as Member"
      },
      {
        "member": "2",
        "varName": "botmember",
        "info": "4",
        "varName2": "",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check If Member"
      },
      {
        "member": "2",
        "varName": "botmember",
        "info": "1",
        "storage": "1",
        "varName2": "vc",
        "name": "Store Member Things"
      },
      {
        "channel": "3",
        "varName": "vc",
        "info": "4",
        "storage": "1",
        "varName2": "members",
        "name": "Store Voice channel things"
      },
      {
        "list": "7",
        "varName": "members",
        "storage": "1",
        "varName2": "length",
        "name": "Get List Length"
      },
      {
        "storage": "1",
        "varName": "length",
        "comparison": "1",
        "value": "1",
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "1",
        "iffalseVal": "",
        "name": "Check Variable"
      },
      {
        "action": "0",
        "name": "Control Audio"
      },
      {
        "name": "Leave Voice Channel"
      },
      {
        "channel": "6",
        "varName": "music-cmd-channel",
        "message": "💭 I was alone in the voice channel... I left",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      }
    ]
  },
  {
    "name": "AnnounceAndStopMusic",
    "temp": "",
    "event-type": "0",
    "_id": "PEKvF",
    "actions": [
      {
        "server": "1",
        "varName": "server",
        "name": "Change Server"
      },
      {
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "3",
        "iffalseVal": "6",
        "name": "Check is Bot in Voice Channel"
      },
      {
        "server": "1",
        "varName": "server",
        "storage": "1",
        "varName2": "botmem",
        "name": "Get Bot as Member"
      },
      {
        "member": "2",
        "varName": "botmem",
        "info": "1",
        "storage": "1",
        "varName2": "vc",
        "name": "Store Member Things"
      },
      {
        "action": "0",
        "name": "Control Audio"
      },
      {
        "url": "soundboard/cereal-restart.mp3",
        "seek": "0",
        "volume": "",
        "passes": "1",
        "bitrate": "",
        "type": "0",
        "name": "Play File"
      },
      {
        "time": "18",
        "measurement": "1",
        "name": "Wait"
      },
      {
        "name": "Leave Voice Channel"
      },
      {
        "comment": "Skip",
        "color": "#000000",
        "name": "Comment"
      }
    ]
  },
  {
    "name": "FindMusicServers",
    "temp": "",
    "event-type": "0",
    "_id": "WkTzH",
    "actions": [
      {
        "server": "1",
        "varName": "server",
        "name": "Change Server"
      },
      {
        "iftrue": "0",
        "iftrueVal": "",
        "iffalse": "3",
        "iffalseVal": "2",
        "name": "Check is Bot in Voice Channel"
      },
      {
        "channel": "5",
        "varName": "channel",
        "message": "${tempVars(\"server\").name} - (${tempVars(\"server\").id})",
        "storage": "0",
        "varName2": "",
        "name": "Send Message"
      },
      {
        "time": "1",
        "measurement": "1",
        "name": "Wait"
      },
      {
        "comment": "Skip",
        "color": "#000000",
        "name": "Comment"
      }
    ]
  }
]